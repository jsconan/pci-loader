name: Release

on:
    pull_request:
        branches: [main]

permissions:
    contents: write
    pull-requests: write
    checks: read

jobs:
    merge_pull_request:
        if: startsWith(github.head_ref, 'release/')
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v5
              with:
                  ref: main
                  fetch-depth: 0
                  fetch-tags: true

            - name: Configure git
              run: |
                  git config user.name "github-actions"
                  git config user.email "github-actions@github.com"

            - name: Automerge Pull Request
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  PULL_REQUEST_NUMBER: ${{ github.event.pull_request.number }}
              run: gh pr merge --merge --admin --delete-branch "${{ env.PULL_REQUEST_NUMBER }}"

            - name: Get tag
              id: get_tag
              env:
                  PULL_REQUEST_TITLE: ${{ github.event.pull_request.title }}
              run: |
                  echo "tag_name=${PULL_REQUEST_TITLE#*/}" >> $GITHUB_OUTPUT

            - name: Create and push tag on main
              run: |
                  git fetch --all
                  git fetch --tags
                  git checkout main
                  git pull
                  git tag "${{ steps.get_tag.outputs.tag_name }}"
                  git push origin "${{ steps.get_tag.outputs.tag_name }}"

            - name: Prepare release notes
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  PULL_REQUEST_BODY: ${{ github.event.pull_request.body }}
              run: |
                  GENERATED_NOTES=$(gh api repos/${{ github.repository }}/releases/generate-notes \
                      -f tag_name="${{ steps.get_tag.outputs.tag_name }}" \
                      -f target_commitish=main \
                      --jq .body)
                  echo "$PULL_REQUEST_BODY" > release_notes.txt
                  echo "" >> release_notes.txt
                  echo "$GENERATED_NOTES" >> release_notes.txt

            - name: Create GitHub release
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  gh release create "${{ steps.get_tag.outputs.tag_name }}" \
                      --title "${{ steps.get_tag.outputs.tag_name }}" \
                      --notes-file release_notes.txt \
                      --verify-tag \
                      --latest
